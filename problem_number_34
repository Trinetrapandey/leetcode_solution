class Solution {
    public int[] searchRange(int[] nums, int target) {
        int start = 0;
        int end = nums.length - 1;
        int firstOccurrence = -1;
        int lastOccurrence = -1;

        while (start <= end) {
            int mid = start + (end - start) / 2;
            if (nums[mid] == target) {
                firstOccurrence = mid;
                lastOccurrence = mid;
                int left = mid - 1;
                while (left >= 0 && nums[left] == target) {
                    firstOccurrence = left;
                    left--;
                }
                int right = mid + 1;
                while (right < nums.length && nums[right] == target) {
                    lastOccurrence = right;
                    right++;
                }
                return new int[]{firstOccurrence, lastOccurrence};
            } else if (target < nums[mid]) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }
        return new int[]{firstOccurrence, lastOccurrence};
    }
}
